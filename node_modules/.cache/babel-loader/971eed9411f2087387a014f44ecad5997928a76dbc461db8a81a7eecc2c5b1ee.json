{"ast":null,"code":"var _jsxFileName = \"W:\\\\\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C\\\\ksu-docs\\\\src\\\\components\\\\Aspect\\\\AspectGroup.js\";\nimport React from 'react';\nimport { Row, Col, Card, Container } from 'react-bootstrap';\nimport AscpectField from './AspectField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AspectGroup = ({\n  aspects,\n  onAspectChange,\n  onAddAspect,\n  onRemoveAspect\n}) => {\n  // Фильтруем аспекты по их типу\n  const type1Aspects = aspects.filter(aspect => aspect.type === 'type1');\n  const type2Aspects = aspects.filter(aspect => aspect.type === 'type2');\n  const type3Aspects = aspects.filter(aspect => aspect.type === 'type3');\n\n  // Добавляем аспект для определенного типа\n  const handleAddAspectForType = type => {\n    onAddAspect({\n      name: '',\n      type\n    }); // Добавляем новый объект аспекта с указанным типом\n  };\n  const renderColumn = (typeAspects, typeLabel, type) => /*#__PURE__*/_jsxDEV(Col, {\n    xs: 12,\n    md: 4,\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: typeLabel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), typeAspects.map((aspect, index) => /*#__PURE__*/_jsxDEV(AscpectField, {\n      // Уникальный ключ для каждого аспекта\n      aspectData: aspect,\n      onChange: data => onAspectChange(aspects.findIndex(a => a === aspect), data),\n      onRemove: () => onRemoveAspect(aspects.findIndex(a => a === aspect))\n    }, `${type}-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this)), typeAspects.length < 4 &&\n    /*#__PURE__*/\n    // Ограничиваем добавление до 4 аспектов на тип\n    _jsxDEV(Card, {\n      className: \"d-flex align-items-center justify-content-center\",\n      style: {\n        width: '100%',\n        minHeight: '125px',\n        border: '2px dashed #ccc',\n        cursor: 'pointer',\n        marginBottom: '10px'\n      },\n      onClick: () => handleAddAspectForType(type),\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        className: \"d-flex align-items-center justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"+ \\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0430\\u0441\\u043F\\u0435\\u043A\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u0412 \\u0440\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442\\u0435 \\u043E\\u0441\\u0432\\u043E\\u0435\\u043D\\u0438\\u044F \\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u044B \\u043E\\u0431\\u0443\\u0447\\u0430\\u044E\\u0449\\u0438\\u0439\\u0441\\u044F \\u0434\\u043E\\u043B\\u0436\\u0435\\u043D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [renderColumn(type1Aspects, 'Знать', 'type1'), renderColumn(type2Aspects, 'Уметь', 'type2'), renderColumn(type3Aspects, 'Владеть', 'type3')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_c = AspectGroup;\nexport default AspectGroup;\nvar _c;\n$RefreshReg$(_c, \"AspectGroup\");","map":{"version":3,"names":["React","Row","Col","Card","Container","AscpectField","jsxDEV","_jsxDEV","AspectGroup","aspects","onAspectChange","onAddAspect","onRemoveAspect","type1Aspects","filter","aspect","type","type2Aspects","type3Aspects","handleAddAspectForType","name","renderColumn","typeAspects","typeLabel","xs","md","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","aspectData","onChange","data","findIndex","a","onRemove","length","className","style","width","minHeight","border","cursor","marginBottom","onClick","Body","_c","$RefreshReg$"],"sources":["W:/Диплом/ksu-docs/src/components/Aspect/AspectGroup.js"],"sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card, Container } from 'react-bootstrap';\r\nimport AscpectField from './AspectField';\r\n\r\nconst AspectGroup = ({\r\n    aspects,\r\n    onAspectChange,\r\n    onAddAspect,\r\n    onRemoveAspect,\r\n}) => {\r\n    // Фильтруем аспекты по их типу\r\n    const type1Aspects = aspects.filter((aspect) => aspect.type === 'type1');\r\n    const type2Aspects = aspects.filter((aspect) => aspect.type === 'type2');\r\n    const type3Aspects = aspects.filter((aspect) => aspect.type === 'type3');\r\n\r\n    // Добавляем аспект для определенного типа\r\n    const handleAddAspectForType = (type) => {\r\n        onAddAspect({ name: '', type }); // Добавляем новый объект аспекта с указанным типом\r\n    };\r\n\r\n    const renderColumn = (typeAspects, typeLabel, type) => (\r\n        <Col xs={12} md={4}>\r\n            <h5>{typeLabel}</h5>\r\n            {typeAspects.map((aspect, index) => (\r\n                <AscpectField\r\n                    key={`${type}-${index}`} // Уникальный ключ для каждого аспекта\r\n                    aspectData={aspect}\r\n                    onChange={(data) =>\r\n                        onAspectChange(\r\n                            aspects.findIndex((a) => a === aspect),\r\n                            data\r\n                        )\r\n                    }\r\n                    onRemove={() =>\r\n                        onRemoveAspect(aspects.findIndex((a) => a === aspect))\r\n                    }\r\n                />\r\n            ))}\r\n            {typeAspects.length < 4 && ( // Ограничиваем добавление до 4 аспектов на тип\r\n                <Card\r\n                    className=\"d-flex align-items-center justify-content-center\"\r\n                    style={{\r\n                        width: '100%',\r\n                        minHeight: '125px',\r\n                        border: '2px dashed #ccc',\r\n                        cursor: 'pointer',\r\n                        marginBottom: '10px',\r\n                    }}\r\n                    onClick={() => handleAddAspectForType(type)}\r\n                >\r\n                    <Card.Body className=\"d-flex align-items-center justify-content-center\">\r\n                        <h5>+ Добавить аспект</h5>\r\n                    </Card.Body>\r\n                </Card>\r\n            )}\r\n        </Col>\r\n    );\r\n\r\n    return (\r\n        <Container>\r\n            <h3>В результате освоения программы обучающийся должен</h3>\r\n            <Row>\r\n                {renderColumn(type1Aspects, 'Знать', 'type1')}\r\n                {renderColumn(type2Aspects, 'Уметь', 'type2')}\r\n                {renderColumn(type3Aspects, 'Владеть', 'type3')}\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default AspectGroup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}